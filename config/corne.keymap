/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT_L 0 

&lt {
    quick-tap-ms = <200>;
    tapping-term-ms = <200>;
};

/ {

        chosen { zmk,matrix_transform = &five_column_transform; };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// ----------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I   |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K   |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,   |  .  |  /  |
//             | esc | LWR | tab |   | spc | RSE  | bksp |
                        bindings = <
   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P   
   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI
   &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH
        &kp ESC &mo 1 &kp TAB   &kp SPACE &mo 2 &kp BSPC
                        >;
                };
                lower_layer {
// ---------------------------------------------------------------------------
// |  1   |  2   |  3    |  4         |  5     |   |  6  |  7     |  8    |  9   |  0   |
// | lgui | lalt | lctrl | lshift     |        |   |     | lshift | rctrl | ralt | rgui |
// | BT1  | BT2  | BT3   | BT_CLR_ALL | BT_CLR |   | LFT | DWN    |  UP   | RGT  |      |
//               | GUI   |            | SPC    |   | ENT |        | ALT   |
                        bindings = <
   &kp N1       &kp N2       &kp N3       &kp N4         &kp N5         &kp N6       &kp N7       &kp N8      &kp N9        &kp N0
   &sk LGUI     &sk LALT     &sk LCTRL    &sk LSHIFT     &trans         &trans       &sk LSHIFT   &sk RCTRL   &sk RALT      &sk RGUI
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_CLR_ALL &bt BT_CLR     &kp LEFT     &kp DOWN     &kp UP      &kp RIGHT     &trans
                             &kp ESC      &trans         &kp SPACE      &kp RET      &trans       &kp RALT
                        >;
   // &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans
                };

                raise_layer {
// ---------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// | f1  | f2  | f5  | ret |  ~  |   |  -  |  =  |  [  |  ]  |  \  |
// | f9  | f10 | f11 | f12 |  `  |   |  _  |  +  |  {  |  }  | "|" |
//             | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp EXCL &kp AT  &kp HASH &kp DLLR &kp PRCNT      &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR
   &kp F1   &kp F2  &kp F5   &kp RET  &kp TILDE      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH
   &kp F9   &kp F10 &kp F11  &kp F12  &kp GRAVE      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE
                    &kp ESC  &trans   &kp TAB        &kp SPACE &trans    &kp BSPC
                        >;
                };
        };
};
